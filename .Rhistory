output$product <- renderText({
x * 5
})
}
shinyApp(ui, server)
source('~/.active-rstudio-document', echo=TRUE)
runApp('2_exercises2_sliderMultiplyTextoutput.R')
runApp('2_exercises2_sliderMultiplyTextoutput.R')
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
runApp('2_exercises2_sliderMultiplyTextoutput.R')
?sliderInput
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/Uni/shiny buch/3_ex2_SelectInput_SubHeadings.R', echo=TRUE)
selectInput("breed", "Select animal",
choices = list("dogs" = list("german shepherd", "bulldog"),
"cats" = list("persian cat", "bengal cat")))
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(reactable)
install.packages(reactable)
install.packages("reactable")
library(reactable)
ui <- fluidPage(
reactableOutput("table")
)
server <- function(input, output, session) {
output$table <- renderteactable(mtcars, options = list(ordering = F,
searching = F))
}
shinyApp(ui, server)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
install.packages("reactable")
source('~/.active-rstudio-document', echo=TRUE)
install.packages("reactable")
install.packages("reactable")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
theme_demo <- function(theme) {
fluidPage(
theme = shinythemes::shinytheme(theme),
sidebarLayout(
sidebarPanel(
textInput("txt", "Text input:", "text here"),
sliderInput("slider", "Slider input:", 1, 100, 30)
),
mainPanel(
h1("Header 1"),
h2("Header 2"),
p("Some text")
)
)
)
}
theme_demo("darkly")
theme_demo <- function(theme) {
fluidPage(
theme = shinythemes::shinytheme(theme),
sidebarLayout(
sidebarPanel(
textInput("txt", "Text input:", "text here"),
sliderInput("slider", "Slider input:", 1, 100, 30)
),
mainPanel(
h1("Header 1"),
h2("Header 2"),
p("Some text")
)
)
)
}
quit
quit()
theme_demo <- function(theme) {
fluidPage(
theme = shinythemes::shinytheme(theme),
sidebarLayout(
sidebarPanel(
textInput("txt", "Text input:", "text here"),
sliderInput("slider", "Slider input:", 1, 100, 30)
),
mainPanel(
h1("Header 1"),
h2("Header 2"),
p("Some text")
)
)
)
}
theme_demo("darkly")
theme_demo("flatly")
theme_demo("sandstone")
install.packages("shinythemes")
theme_demo <- function(theme) {
fluidPage(
theme = shinythemes::shinytheme(theme),
sidebarLayout(
sidebarPanel(
textInput("txt", "Text input:", "text here"),
sliderInput("slider", "Slider input:", 1, 100, 30)
),
mainPanel(
h1("Header 1"),
h2("Header 2"),
p("Some text")
)
)
)
}
theme_demo("darkly")
theme_demo("flatly")
ui <- theme_demo("darkly")
server <- function(omput, output, session){}
shinyApp(ui, server)
runApp('3_ex22_dataTable_removeSearchingetc.R')
runApp('3_ex22_dataTable_removeSearchingetc.R')
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
theme_demo("darkly")
ui <- theme_demo("darkly")
server <- function(omput, output, session){}
shinyApp(ui, server)
ui <- theme_demo("darkly")
server <- function(ouput, output, session){}
shinyApp(ui, server)
ui <- theme_demo("darkly")
server <- function(){}
shinyApp(ui, server)
shinyApp(ui)
ui <- theme_demo("darkly")
server <- function(input, output, session) {
}
shinyApp(ui, server)
library(ggplot2)
freqpoly <- function(x1, x2, binwidth = 0.1, xlim = c(-3, 3)) {
df <- data.frame(
x = c(x1, x2),
g = c(rep("x1", length(x1)), rep("x2", length(x2)))
)
ggplot(df, aes(x, colour = g)) +
geom_freqpoly(binwidth = binwidth, size = 1) +
coord_cartesian(xlim = xlim)
}
t_test <- function(x1, x2) {
test <- t.test(x1, x2)
# use sprintf() to format t.test() results compactly
sprintf(
"p value: %0.3f\n[%0.2f, %0.2f]",
test$p.value, test$conf.int[1], test$conf.int[2]
)
}
x1 <- rnorm(100, mean = 0, sd = 0.5)
x2 <- rnorm(200, mean = 0.15, sd = 0.9)
freqpoly(x1, x2)
cat(t_test(x1, x2))
shinyApp(ui, server)
ui <- fluidPage(
fluidRow(
column(4,
"Distribution 1",
numericInput("n1", label = "n", value = 1000, min = 1),
numericInput("mean1", label = "µ", value = 0, step = 0.1),
numericInput("sd1", label = "σ", value = 0.5, min = 0.1, step = 0.1)
),
column(4,
"Distribution 2",
numericInput("n2", label = "n", value = 1000, min = 1),
numericInput("mean2", label = "µ", value = 0, step = 0.1),
numericInput("sd2", label = "σ", value = 0.5, min = 0.1, step = 0.1)
),
column(4,
"Frequency polygon",
numericInput("binwidth", label = "Bin width", value = 0.1, step = 0.1),
sliderInput("range", label = "range", value = c(-3, 3), min = -5, max = 5)
)
),
fluidRow(
column(9, plotOutput("hist")),
column(3, verbatimTextOutput("ttest"))
)
)
server <- function(input, output, session) {
output$hist <- renderPlot({
x1 <- rnorm(input$n1, input$mean1, input$sd1)
x2 <- rnorm(input$n2, input$mean2, input$sd2)
freqpoly(x1, x2, binwidth = input$binwidth, xlim = input$range)
}, res = 96)
output$ttest <- renderText({
x1 <- rnorm(input$n1, input$mean1, input$sd1)
x2 <- rnorm(input$n2, input$mean2, input$sd2)
t_test(x1, x2)
})
}
shinyApp(ui, server)
server <- function(input, output, session) {
# now x1 and x2 in reactive function
x x1 <- reactive(rnorm(input$n1, input$mean1, input$sd1))
x2 <- reactive(rnorm(input$n2, input$mean2, input$sd2))
output$hist <- renderPlot({
# x1 <- rnorm(input$n1, input$mean1, input$sd1)
#x2 <- rnorm(input$n2, input$mean2, input$sd2)
freqpoly(x1(), x2(), binwidth = input$binwidth, xlim = input$range)
}, res = 96)
output$ttest <- renderText({
# x1 <- rnorm(input$n1, input$mean1, input$sd1)
#x2 <- rnorm(input$n2, input$mean2, input$sd2)
t_test(x1(), x2())
})
}
# now x1 and x2 in reactive function
x1 <- reactive(rnorm(input$n1, input$mean1, input$sd1))
x2 <- reactive(rnorm(input$n2, input$mean2, input$sd2))
output$hist <- renderPlot({
# x1 <- rnorm(input$n1, input$mean1, input$sd1)
#x2 <- rnorm(input$n2, input$mean2, input$sd2)
freqpoly(x1(), x2(), binwidth = input$binwidth, xlim = input$range)
}, res = 96)
output$ttest <- renderText({
# x1 <- rnorm(input$n1, input$mean1, input$sd1)
#x2 <- rnorm(input$n2, input$mean2, input$sd2)
t_test(x1(), x2())
})
server <- function(input, output, session) {
# now x1 and x2 in reactive function
x1 <- reactive(rnorm(input$n1, input$mean1, input$sd1))
x2 <- reactive(rnorm(input$n2, input$mean2, input$sd2))
output$hist <- renderPlot({
# x1 <- rnorm(input$n1, input$mean1, input$sd1)
#x2 <- rnorm(input$n2, input$mean2, input$sd2)
freqpoly(x1(), x2(), binwidth = input$binwidth, xlim = input$range)
}, res = 96)
output$ttest <- renderText({
# x1 <- rnorm(input$n1, input$mean1, input$sd1)
#x2 <- rnorm(input$n2, input$mean2, input$sd2)
t_test(x1(), x2())
})
}
shinyApp(ui, server)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(shiny)
library(vroom)
if (!require("vrrom")) install.packages("vroom")
injuries <- vroom::vroom("neiss/injuries.tsv.gz")
injuries <- vroom::vroom("neiss/injuries.tsv.gz")
injuries <- vroom::vroom("data/injuries.tsv.gz")
injuries
products <- vroom::vroom("neiss/products.tsv")
products <- vroom::vroom("data/products.tsv")
population <- vroom::vroom("data/population.tsv")
prod_codes <- setNames(products$prod_code, products$title)
prod_codes
source('~/Uni/shiny buch/5_CaseStudy.R', echo=TRUE)
install.packages("vroom")
runApp('5_CaseStudy.R')
install.packages("vroom")
runApp('5_CaseStudy.R')
install.packages("vroom")
runApp('5_CaseStudy.R')
install.packages("vroom")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(shiny); runApp('6_debugging_casestudy.R')
library(shiny)
sales <- readr::read_csv("data/sales_data_sample.csv")
sales <- sales[c(
"TERRITORY", "ORDERDATE", "ORDERNUMBER", "PRODUCTCODE",
"QUANTITYORDERED", "PRICEEACH"
)]
ui <- fluidPage(
selectInput("territory", "territory", choices = unique(sales$TERRITORY)),
tableOutput("selected")
)
server <- function(input, output, session) {
selected <- reactive({
#browser()
subset(sales, TERRITORY %in% input$territory)
})
output$selected <- renderTable(head(selected(), 10))
}
shinyApp(ui, server)
runApp('6_debugging_casestudy.R')
subset(sales, TERRITORY %in% input$territory)
input$territory
runApp('6_debugging_casestudy.R')
unique(sales$TERRITORY)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
nearPoints(mtcars, input$plot_click)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
install.packages("shinyFeedback")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
?need
source('~/.active-rstudio-document', echo=TRUE)
runApp('8_shownotification_transient.R')
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
runApp('8_progressbar_waiter_Package.R')
runApp('8_progressbar_waiter_Package.R')
runApp('8_progressbar_waiter_Package.R')
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
install.packages("shinycassloaders")
source('~/.active-rstudio-document', echo=TRUE)
install.packages("shinycssloaders")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
showModal()
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
install.packages("ggforce")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
install.packages("reactlog")
# enalbe react log
reactlog::reactlog_enable()
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
runApp('4_eventReactive_actionButton.R')
runApp('4_eventReactive_actionButton.R')
runApp('4_eventReactive_actionButton.R')
runApp('4_eventReactive_actionButton.R')
runApp('4_eventReactive_actionButton.R')
runApp('4_eventReactive_actionButton.R')
runApp('4_eventReactive_actionButton.R')
runApp('4_eventReactive_actionButton.R')
runApp('4_eventReactive_actionButton.R')
runApp('4_eventReactive_actionButton.R')
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
runApp('16_actionButton_addValueToList_ThenresetInput.R')
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
setwd(r("C:\Users\lukas\Documents\shiny package"))
setwd(r"(C:\Users\lukas\Documents\shiny package)")
usethis::create_package("ecomAnalytics")
usethis::use_test("kpiCalculations")
usethis::use_description()
setwd(r"(C:\Users\lukas\Documents\GitHub\DSP_Sentiment_Covid_App)")
usethis::create_package("SentimentApp")
usethis::create_package("SentimentApp")
shiny::runApp("inst")
devtools::load_all(".")
shiny::runApp("inst")
devtools::load_all(".")
shiny::runApp("inst")
#filename <- "data/beerSalesSubset.csv"
filename <- "https://unitc-my.sharepoint.com/personal/zxmvp94_s-cloud_uni-tuebingen_de/_layouts/15/onedrive.aspx?id=%2Fpersonal%2Fzxmvp94%5Fs%2Dcloud%5Funi%2Dtuebingen%5Fde%2FDocuments%2FData%2FYahoo%2FGermany/Germany_1COV.DE"
test_data1 <- read.csv(filename)
#filename <- "data/beerSalesSubset.csv"
filename <- "https://unitc-my.sharepoint.com/:x:/g/personal/zxmvp94_s-cloud_uni-tuebingen_de/ESTGmTK06PJEgx5bZ99GploBA6csaAbkLRTdmpMoXDnP9A?e=okeMyu"
test_data1 <- read.csv(filename)
View(test_data1)
test_data1 <- readxl::read_xlsx(filename)
test_data1 <- read.csv(filename)
View(test_data1)
test_data1 <- readxl::read_excel(filename)
#filename <- "data/beerSalesSubset.csv"
filename <- "https://unitc-my.sharepoint.com/:x:/g/personal/zxmvp94_s-cloud_uni-tuebingen_de/ESTGmTK06PJEgx5bZ99GploBA6csaAbkLRTdmpMoXDnP9A?e=okeMyu.csv"
test_data1 <- read.csv(filename)
#filename <- "data/beerSalesSubset.csv"
filename <- "https://unitc-my.sharepoint.com/:x:/g/personal/zxmvp94_s-cloud_uni-tuebingen_de/ESTGmTK06PJEgx5bZ99GploBA6csaAbkLRTdmpMoXDnP9A?e=okeMyu.csv"
test_data1 <- read.csv(filename)
View(test_data1)
#filename <- "data/beerSalesSubset.csv"
filename <- "unitc-my.sharepoint.com/:x:/g/personal/zxmvp94_s-cloud_uni-tuebingen_de/ESTGmTK06PJEgx5bZ99GploBA6csaAbkLRTdmpMoXDnP9A?e=okeMyu.csv"
test_data1 <- read.csv(filename)
#filename <- "data/beerSalesSubset.csv"
filename <- "//unitc-my.sharepoint.com/:x:/g/personal/zxmvp94_s-cloud_uni-tuebingen_de/ESTGmTK06PJEgx5bZ99GploBA6csaAbkLRTdmpMoXDnP9A?e=okeMyu.csv"
test_data1 <- read.csv(filename)
#filename <- "data/beerSalesSubset.csv"
filename <- "/unitc-my.sharepoint.com/:x:/g/personal/zxmvp94_s-cloud_uni-tuebingen_de/ESTGmTK06PJEgx5bZ99GploBA6csaAbkLRTdmpMoXDnP9A?e=okeMyu.csv"
test_data1 <- read.csv(filename)
#filename <- "data/beerSalesSubset.csv"
filename <- "https://unitc-my.sharepoint.com/:x:/g/personal/zxmvp94_s-cloud_uni-tuebingen_de/ESTGmTK06PJEgx5bZ99GploBA6csaAbkLRTdmpMoXDnP9A?e=okeMyu.csv"
test_data1 <- read.csv(filename)
test <- GET(filename)
test <- httr::GET(filename)
View(test)
test2 <- content(test)
test2 <- httr::content(test)
View(test2)
test2 <- httr::content(test, as = "text")
test2 <- httr::content(test)
View(test2)
View(test)
#filename <- "data/beerSalesSubset.csv"
filename <- "https://unitc-my.sharepoint.com/:x:/g/personal/zxmvp94_s-cloud_uni-tuebingen_de/ESTGmTK06PJEgx5bZ99GploBA6csaAbkLRTdmpMoXDnP9A?e=okeMyu"
test <- httr::GET(filename)
test2 <- httr::content(test)
View(test2)
test2$node
test_data1 <- read.csv(url(filename))
#filename <- "data/beerSalesSubset.csv"
filename <- "https://unitc-my.sharepoint.com/:x:/g/personal/zxmvp94_s-cloud_uni-tuebingen_de/ESTGmTK06PJEgx5bZ99GploBA6csaAbkLRTdmpMoXDnP9A?e=okeMyu"
test_data1 <- read.csv(url(filename))
View(test_data1)
filename <- "https://unitc-my.sharepoint.com/:x:/g/personal/zxmvp94_s-cloud_uni-tuebingen_de/ESTGmTK06PJEgx5bZ99GploBA6csaAbkLRTdmpMoXDnP9A?e=okeMyu"
download.file(filename, destfile = "/tmp/test.csv")
download.file(filename, destfile = "C:\Users")
download.file(filename, destfile = "C:/Users")
curl::curl(filename)
test_data1 <- read.csv(curl::curl(filename))
View(test_data1)
filename <- "https://unitc-my.sharepoint.com/:x:/g/personal/zxmvp94_s-cloud_uni-tuebingen_de/ESTGmTK06PJEgx5bZ99GploBA6csaAbkLRTdmpMoXDnP9A?e=okeMyu"
temp <- tempfile(fileext = ".zip")
download.file(filename,
temp)
out <- unzip(temp, exdir = tempdir())
bank <- read.csv(out[14], sep = ";")
getwd()
OD_DL_csv <- function(sharedURL, file_name, save2wd = FALSE){
# Save the shared url
URL1 <- unlist(strsplit(sharedURL,"[?]"))[1]
URL1 <- paste0(URL1,"?download=1")
curl::curl_download(
URL1,
destfile = file.path(tempdir(), file_name),
mode = "wb"
)
if(isTRUE(save2wd)){
file.copy(
from = paste0(tempdir(),"\\", file_name),
to = "./")
}
return(read.csv(paste0(tempdir(), "\\" ,file_name, stringsAsFactors = FALSE)))
}
test <- OD_DL_csv(filename, "Germany_1COV.DE")
filename
filename_edit <- "https://unitc-my.sharepoint.com/:x:/g/personal/zxmvp94_s-cloud_uni-tuebingen_de/ESTGmTK06PJEgx5bZ99GploBA6csaAbkLRTdmpMoXDnP9A?download=1"
test <- OD_DL_csv(filename_edit, "Germany_1COV.DE")
test2 <- read.csv("https://unitc-my.sharepoint.com/:x:/g/personal/zxmvp94_s-cloud_uni-tuebingen_de/ESTGmTK06PJEgx5bZ99GploBA6csaAbkLRTdmpMoXDnP9A?download=1")
test2 <- read.csv(filename_edit)
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
devtools::load_all(".")
shiny::runApp(inst)
shiny::runApp("inst")
